<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out_DA14585\Objects\blinky_585.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out_DA14585\Objects\blinky_585.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Fri Jan 29 12:12:50 2021
<BR><P>
<H3>Maximum Stack Usage =         64 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; system_init &rArr; periph_init &rArr; uart_initialize &rArr; uart_baudrate_setf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_Handler</a><BR>
 <LI><a href="#[22]">HardFault_HandlerC</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">HardFault_HandlerC</a><BR>
 <LI><a href="#[21]">NMI_HandlerC</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">NMI_HandlerC</a><BR>
 <LI><a href="#[39]">uart_write_byte</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">uart_write_byte</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[e]">BLE_RF_DIAG_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1a]">DMA_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[10]">GPIO0_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[11]">GPIO1_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[12]">GPIO2_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[13]">GPIO3_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[14]">GPIO4_Handler</a> from gpio.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[22]">HardFault_HandlerC</a> from exceptions.o(.text) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[a]">I2C_Handler</a> from i2c.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[d]">KEYBRD_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[21]">NMI_HandlerC</a> from exceptions.o(.text) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[17]">PCM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1b]">RESERVED21_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1c]">RESERVED22_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1d]">RESERVED23_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[f]">RFCAL_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[b]">SPI_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[18]">SRCIN_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[19]">SRCOUT_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[15]">SWTIM_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from systick.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_da14585_586.o(.text) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[9]">UART2_Handler</a> from uart.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[8]">UART_Handler</a> from uart.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[16]">WKUP_QUADEC_Handler</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_da14585_586.o(.text)
 <LI><a href="#[24]">intr_master_receive_buffer_handler</a> from i2c.o(.text) referenced from i2c.o(.text)
 <LI><a href="#[23]">intr_master_transmit_buffer_handler</a> from i2c.o(.text) referenced from i2c.o(.text)
 <LI><a href="#[25]">intr_slave_receive_buffer_handler</a> from i2c.o(.text) referenced from i2c.o(.text)
 <LI><a href="#[26]">intr_slave_transmit_buffer_handler</a> from i2c.o(.text) referenced from i2c.o(.text)
 <LI><a href="#[1e]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[7]">rwble_isr</a> from startup_da14585_586.o(.text) referenced from startup_da14585_586.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[73]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[27]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[72]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[74]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[75]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[76]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[77]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[78]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[79]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_da14585_586.o(.text), UNUSED)

<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, system_da14585_586.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BLE_RF_DIAG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PCM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RESERVED21_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>RESERVED22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RESERVED23_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SRCIN_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SRCOUT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SWTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>rwble_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>HardFault_HandlerC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exceptions.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_HandlerC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[21]"></a>NMI_HandlerC</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, exceptions.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_HandlerC
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_HandlerC
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>GPIO_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[2d]"></a>GPIO_SetPinFunction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[7a]"></a>GPIO_GetPinFunction</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>GPIO_SetInactive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky_test
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[2b]"></a>GPIO_SetActive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky_test
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[2a]"></a>GPIO_ConfigurePin</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[7b]"></a>GPIO_ConfigurePinPower</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>GPIO_GetPinStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>GPIO_is_valid</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[2e]"></a>GPIO_EnableIRQ</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioshift16
</UL>

<P><STRONG><a name="[7e]"></a>GPIO_GetIRQInputLevel</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>GPIO_SetIRQInputLevel</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioshift16
</UL>

<P><STRONG><a name="[31]"></a>GPIO_ResetIRQ</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpioshift16
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>

<P><STRONG><a name="[7f]"></a>GPIO_RegisterCallback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>GPIOn_Handler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO4_Handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Handler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Handler
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Handler
</UL>

<P><STRONG><a name="[10]"></a>GPIO0_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO0_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>GPIO1_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO1_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPIO2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO2_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>GPIO3_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO3_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>GPIO4_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO4_Handler &rArr; GPIOn_Handler &rArr; GPIO_ResetIRQ
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOn_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>GPIO_EnablePorPin</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>GPIO_DisablePorPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>GPIO_SetPorTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>GPIO_GetPorTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>UART_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART2_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART2_Handler &rArr; uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>uart_enable</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_initialize
</UL>

<P><STRONG><a name="[84]"></a>uart_disable</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[38]"></a>uart_baudrate_setf</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_baudrate_setf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_initialize
</UL>

<P><STRONG><a name="[85]"></a>uart_register_tx_cb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>uart_register_rx_cb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>uart_register_err_cb</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>uart_initialize</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_initialize &rArr; uart_baudrate_setf
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_baudrate_setf
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
</UL>

<P><STRONG><a name="[39]"></a>uart_write_byte</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>

<P><STRONG><a name="[3a]"></a>uart_write_buffer</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[3b]"></a>uart_send</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = uart_send &rArr; uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_write_buffer
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_string
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_byte
</UL>

<P><STRONG><a name="[3f]"></a>uart_wait_tx_finish</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wait_tx_finish
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_wait_tx_finish
</UL>

<P><STRONG><a name="[40]"></a>uart_read_byte</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read_buffer
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read_byte
</UL>

<P><STRONG><a name="[41]"></a>uart_read_buffer</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive
</UL>

<P><STRONG><a name="[42]"></a>uart_receive</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_read_buffer
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>

<P><STRONG><a name="[44]"></a>uart_enable_flow_control</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable_flow_control
</UL>

<P><STRONG><a name="[43]"></a>uart_disable_flow_control</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable_flow_control
</UL>

<P><STRONG><a name="[45]"></a>itoa</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, uart_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_byte_dec
</UL>

<P><STRONG><a name="[48]"></a>printf_byte</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, uart_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_word
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_hword
</UL>

<P><STRONG><a name="[49]"></a>printf_string</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, uart_utils.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = printf_string &rArr; uart_send &rArr; uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky_test
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_byte_dec
</UL>

<P><STRONG><a name="[4a]"></a>print_hword</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, uart_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_byte
</UL>

<P><STRONG><a name="[4b]"></a>print_word</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, uart_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_byte
</UL>

<P><STRONG><a name="[4c]"></a>printf_byte_dec</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, uart_utils.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_string
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
</UL>

<P><STRONG><a name="[70]"></a>hw_otpc_disable</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, hw_otpc_58x.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hw_otpc_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[88]"></a>hw_otpc_set_speed</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)

<P><STRONG><a name="[89]"></a>hw_otpc_power_save</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>hw_otpc_num_of_rr</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_write_rr
</UL>

<P><STRONG><a name="[4d]"></a>hw_otpc_write_rr</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_word_prog
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_num_of_rr
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_word_prog
</UL>

<P><STRONG><a name="[4f]"></a>hw_otpc_manual_word_prog</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_write_rr
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manual_prog_verify
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_prog
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_write_rr
</UL>

<P><STRONG><a name="[8a]"></a>hw_otpc_manual_read_off</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>hw_otpc_manual_read_on</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_prog
</UL>

<P><STRONG><a name="[51]"></a>hw_otpc_manual_prog</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_read_on
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_word_prog
</UL>

<P><STRONG><a name="[53]"></a>hw_otpc_dma_prog</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_auto_done
</UL>

<P><STRONG><a name="[55]"></a>hw_otpc_dma_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_auto_done
</UL>

<P><STRONG><a name="[56]"></a>hw_otpc_fifo_prog</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_auto_done
</UL>

<P><STRONG><a name="[57]"></a>hw_otpc_fifo_read</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_for_auto_done
</UL>

<P><STRONG><a name="[8b]"></a>hw_otpc_prepare</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>hw_otpc_cancel_prepare</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>hw_otpc_blank</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_core_test
</UL>

<P><STRONG><a name="[5a]"></a>hw_otpc_tdec</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_core_test
</UL>

<P><STRONG><a name="[5b]"></a>hw_otpc_twr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_core_test
</UL>

<P><STRONG><a name="[8d]"></a>systick_register_callback</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systick.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>systick_start</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_wait
</UL>

<P><STRONG><a name="[5e]"></a>systick_stop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_wait
</UL>

<P><STRONG><a name="[5c]"></a>systick_wait</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, systick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_stop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_start
</UL>

<P><STRONG><a name="[8e]"></a>systick_value</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, systick.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>i2c_setup_slave</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[61]"></a>i2c_setup_master</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_init
</UL>

<P><STRONG><a name="[5f]"></a>i2c_init</STRONG> (Thumb, 190 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_setup_master
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_setup_slave
</UL>

<P><STRONG><a name="[8f]"></a>i2c_release</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>i2c_master_transmit_buffer_sync</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>i2c_master_receive_buffer_sync</STRONG> (Thumb, 100 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>i2c_register_int</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_transmit_buffer_async
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_slave_receive_buffer_async
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_receive_buffer_async
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_master_transmit_buffer_async
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_unregister_int
</UL>

<P><STRONG><a name="[62]"></a>i2c_unregister_int</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_register_int
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_reply
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_reply
</UL>

<P><STRONG><a name="[66]"></a>i2c_master_transmit_buffer_async</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_register_int
</UL>

<P><STRONG><a name="[68]"></a>i2c_master_receive_buffer_async</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_register_int
</UL>

<P><STRONG><a name="[92]"></a>i2c_slave_receive_buffer_sync</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>i2c_slave_transmit_buffer_sync</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, i2c.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>i2c_slave_receive_buffer_async</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_register_int
</UL>

<P><STRONG><a name="[6a]"></a>i2c_slave_transmit_buffer_async</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_register_int
</UL>

<P><STRONG><a name="[a]"></a>I2C_Handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>blinky_test</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = blinky_test &rArr; printf_string &rArr; uart_send &rArr; uart_write_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_string
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main &rArr; system_init &rArr; periph_init &rArr; uart_initialize &rArr; uart_baudrate_setf
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blinky_test
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[6d]"></a>periph_init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, user_periph_setup.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = periph_init &rArr; uart_initialize &rArr; uart_baudrate_setf
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_initialize
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>arch_set_pxact_gpio</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arch_system.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>set_xtal16m_trim_value</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, arch_system.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>reset_indication</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arch_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[6c]"></a>system_init</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, arch_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = system_init &rArr; periph_init &rArr; uart_initialize &rArr; uart_baudrate_setf
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_indication
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;periph_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_read_on
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_disable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
</UL>

<P><STRONG><a name="[47]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf_string
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itoa
</UL>

<P><STRONG><a name="[28]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[98]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9a]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[9b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[29]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_da14585_586.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, startup_da14585_586.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_da14585_586.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>gpioshift16</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetIRQ
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetIRQInputLevel
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EnableIRQ
</UL>

<P><STRONG><a name="[3d]"></a>__NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[34]"></a>uart_rx_isr</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[33]"></a>uart_intr_hndl</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = uart_intr_hndl &rArr; uart_tx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_tx_isr
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_rx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_Handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Handler
</UL>

<P><STRONG><a name="[3e]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[3c]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send
</UL>

<P><STRONG><a name="[35]"></a>uart_tx_isr</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uart_tx_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_intr_hndl
</UL>

<P><STRONG><a name="[54]"></a>wait_for_auto_done</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_fifo_read
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_fifo_prog
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_dma_read
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_dma_prog
</UL>

<P><STRONG><a name="[50]"></a>manual_prog_verify</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_manual_word_prog
</UL>

<P><STRONG><a name="[59]"></a>hw_otpc_core_test</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hw_otpc_58x.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_twr
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_tdec
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hw_otpc_blank
</UL>

<P><STRONG><a name="[65]"></a>tx_reply</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_reply &rArr; i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_unregister_int
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intr_slave_transmit_buffer_handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intr_master_transmit_buffer_handler
</UL>

<P><STRONG><a name="[23]"></a>intr_master_transmit_buffer_handler</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = intr_master_transmit_buffer_handler &rArr; tx_reply &rArr; i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_reply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>rx_reply</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_reply &rArr; i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_unregister_int
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intr_slave_receive_buffer_handler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intr_master_receive_buffer_handler
</UL>

<P><STRONG><a name="[24]"></a>intr_master_receive_buffer_handler</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = intr_master_receive_buffer_handler &rArr; rx_reply &rArr; i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_reply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c.o(.text)
</UL>
<P><STRONG><a name="[25]"></a>intr_slave_receive_buffer_handler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = intr_slave_receive_buffer_handler &rArr; rx_reply &rArr; i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_reply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>intr_slave_transmit_buffer_handler</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = intr_slave_transmit_buffer_handler &rArr; tx_reply &rArr; i2c_unregister_int
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_reply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> i2c.o(.text)
</UL>
<P><STRONG><a name="[64]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_unregister_int
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
